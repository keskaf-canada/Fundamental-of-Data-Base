# MYSQL Exampl 1

CREATE DATABASE IF NOT EXISTS southwind;
CREATE TABLE  products (
         productID    INT UNSIGNED  NOT NULL AUTO_INCREMENT,
         productCode  CHAR(3)       NOT NULL DEFAULT '',
         name         VARCHAR(30)   NOT NULL DEFAULT '',
         quantity     INT UNSIGNED  NOT NULL DEFAULT 0,
         price        DECIMAL(7,2)  NOT NULL DEFAULT 99999.99,
         PRIMARY KEY  (productID)
       );
show tables;
INSERT INTO products VALUES (1001, 'PEN', 'Pen Red', 5000, 1.23);
INSERT INTO products VALUES
         (NULL, 'PEN', 'Pen Blue',  8000, 1.25),
         (NULL, 'PEN', 'Pen Black', 2000, 1.25);
         
 INSERT INTO products (productCode, name, quantity, price) VALUES
         ('PEC', 'Pencil 2B', 10000, 0.48),
         ('PEC', 'Pencil 2H', 8000, 0.49);
INSERT INTO products (productCode, name) VALUES ('PEC', 'Pencil HB');
select * from products;
-- List all rows for the specified columns
SELECT name, price FROM products;
select * from products;
SELECT name, price FROM products WHERE price < 1.0;
SELECT name, quantity FROM products WHERE quantity <= 2000;
SELECT name, price, productCode FROM products WHERE productCode = 'PEN';
-- "name" begins with 'PENCIL'
 SELECT name, price FROM products WHERE name LIKE 'PENCIL%';
 SELECT name, price FROM products WHERE name LIKE 'P%';
 SELECT name, price FROM products WHERE name LIKE 'P__ %';
 SELECT * FROM products WHERE quantity >= 5000 AND name LIKE 'Pen %';
 SELECT * FROM products WHERE quantity >= 5000 AND price < 1.24 AND name LIKE 'Pen %';
 select * from products;
SELECT * FROM products 
       WHERE (price BETWEEN 1.0 AND 2.0) AND (quantity BETWEEN 1000 AND 2000);

SELECT * FROM products WHERE productCode IS NULL;
select * from products;
-- ORDER BY
-- Order the results by price in descending order
SELECT * FROM products WHERE name LIKE 'Pen %' ORDER BY price DESC;
-- AS - Alias
select * from products;
SELECT productID AS ID, productCode AS Code,
              name AS Description, price AS `Unit Price`  -- Define aliases to be used as display names
       FROM products
       ORDER BY ID;  -- Use alias ID as reference
select * from products;
-- FUNCTIONS: CONCAT
SELECT CONCAT(productCode, ' - ', name) AS `Product Description`, price FROM products;

-- DISTINCT
SELECT distinct price FROM products;

-- UPDATE
select * from products;
SET SQL_SAFE_UPDATES = 0;
 UPDATE products SET quantity = quantity - 100 WHERE name = 'Pen Red';
select * from products;

-- DELETE
DELETE FROM products WHERE name LIKE 'Pencil%';
select * from products;

